import { useState } from "react";

export default function ImageUpload({ onUploaded }: { onUploaded: (url: string) => void }) {
  const [selected, setSelected] = useState<File | null>(null);
  const [uploading, setUploading] = useState(false);
  const [error, setError] = useState("");

  const handleFile = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSelected(e.target.files?.[0] || null);
  };

  const handleUpload = async () => {
    if (!selected) return;
    setUploading(true);
    setError("");
    const data = new FormData();
    data.append("file", selected);
    data.append("upload_preset", process.env.NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET!);

    try {
      const res = await fetch(
        `https://api.cloudinary.com/v1_1/${process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAMe}/image/upload`,
        { method: "POST", body: data }
      );
      const result = await res.json();
      if (result.secure_url) {
        onUploaded(result.secure_url);
        setSelected(null);
      } else {
        setError("Upload failed");
      }
    } catch (err) {
      setError("Upload error");
    }
    setUploading(false);
  };

  return (
    <div>
      <input type="file" accept="image/*" onChange={handleFile} />
      <button onClick={handleUpload} disabled={!selected || uploading}>
        {uploading ? "Uploading..." : "Upload"}
      </button>
      {error && <p style={{color:"red"}}>{error}</p>}
    </div>
  );
}